//日志记录器接口：抽象产品
interface Logger{
    public void writelog();
}
//数据库日志记录器：具体产品
class DatabaseLogger implements Logger{

    @Override
    public void writelog() {
        System.out.println("数据库日志记录");
    }
}
//文件日志记录器：具体产品
class FileLogger implements Logger{

    @Override
    public void writelog() {
        System.out.println("文件日志记录");
    }
}
//日志记录器工厂接口：抽象工厂
interface LoggerFactory{
    public Logger createLogger();
}
//数据库日志记录器工厂类：具体工厂
class DatabaseLoggerFactor implements LoggerFactory{

    @Override
    public Logger createLogger() {
        Logger logger = new DatabaseLogger();

        return logger;
    }
}
//文件日志记录器工厂类：具体工厂
class FileLoggerFactory implements LoggerFactory{

    @Override
    public Logger createLogger() {
        Logger logger = new FileLogger();
        return logger;
    }
}
public class Client {
    public static void main(String[] args) {
        LoggerFactory factory;
          Logger logger;
          factory = new FileLoggerFactory();
          logger = factory.createLogger();
          logger.writelog();
          factory = new DatabaseLoggerFactor();
        logger = factory.createLogger();
        logger.writelog();
    }
}
